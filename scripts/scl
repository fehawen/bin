#!/usr/bin/env bash
#
# Change scaling (resolution) for external monitor(s).

command -v xrandr >/dev/null || {
    printf 'err: %s\n' "command 'xrandr' not found."
    exit 1
}

external_output="$(xrandr | grep -w "connected" | awk '{if(NR>1)print $1}')"

if [[ -z "$external_output" ]]; then
  printf '%s\n' "No external monitors found."
  exit 1
fi

default_width="$(xrandr | grep "\*" | awk '{print $1}' | cut -dx -f1)"
default_height="$(xrandr | grep "\*" | awk '{print $1}' | cut -dx -f2)"

confirm() {
  echo -e "\nCALCULATED CONFIGURATION:\n${1}\n\n"

  read -r -p "Execute xrandr scaling? [y/N] " answer
  if [[ "$answer" != y ]] && [[ "$answer" != Y ]]; then
    echo "Scaling declined."
    echo "Exiting..."
    exit
  else
    echo "Executing..."
    $1
    echo "Done."
  fi
}

resolution() {
  if [[ "$1" == "default" ]]; then
    echo "${default_width}x${default_height}"
  else
    width="$((default_width * $1 / 10))"
    height="$((default_height * $1 / 10))"

    echo "${width}x${height}"
  fi
}

scale() {
  if [[ "$1" == "default" ]]; then
    config="xrandr --output ${external_output} --scale 1x1 --panning ${default_width}x${default_height}"
    confirm "${config}"
  else
    float="$(printf %.1f "${1}e-1")"
    scale="${float}x${float}"

    panning="$(resolution "${1}")"

    config="xrandr --output ${external_output} --scale ${scale} --panning $panning"
    confirm "${config}"
  fi
}

customize() {
  if [[ "$1" == "verbose" ]]; then
    echo -e "\nEnter scaling value to calculate configuration."
    echo "NOTE: Value must be at least 1, with no more than 1 decimal."
    echo -e "Type 'quit' to exit.\n"
  fi

  read -r -p "Value: " answer
  if [[ "$answer" == "quit" ]]; then
    echo "Exiting..."
    exit 0
  fi

  declare sanitized="${answer//[.,]/}"

  if [[ $sanitized == 0* ]]; then
    echo -e "\nERROR: Value must be at least 1"
    echo -e "Try again.\n"
    customize
  elif [[ ${#sanitized} -gt 2 ]]; then
    echo -e "\nERROR: Value can only have 1 decimal"
    echo -e "Try again.\n"
    customize
  else
    scale "$sanitized"
  fi
}

declare -a actions=(
  "default"
  12
  14
  16
)

declare -a options=(
  "${external_output} at $(resolution "default") (default)"
  "${external_output} at $(resolution 12)"
  "${external_output} at $(resolution 14)"
  "${external_output} at $(resolution 16)"
  "Custom Value"
  "Quit"
)

COLUMNS=12

PS3="Please select an option: "

select OPT in "${options[@]}"
do
  case $OPT in
    "Custom Value")
      customize "verbose"
      break
      ;;
    "Quit")
      echo "Exiting..."
      break
      ;;
    *)
      scale "${actions[$((REPLY - 1))]}"
      break
      ;;
  esac
done
