#!/bin/sh -f

#
# shw - posix sh `wal` alternative.
#
# Based on an old script by Dylan Araps:
# https://raw.githubusercontent.com/dylanaraps/bin/cdaa7b58c917fd9d86d2d5bbb45cad0dcd783408/bud
#

die() {
    printf '%s\n' "$@"
    exit 1
}

exists() {
    command -v "$1" >/dev/null
}

is_img() {
    mime_type=$(file -bi "$1")

    case $mime_type in
        image/*) return 0 ;;
        *) return 1 ;;
    esac
}

random_img() {
    set +f
    set -f -- "$1/"*

    shift "$(($$ * PPID % $#))"

    while ! is_img "$1" && [ "$2" ]; do shift; done

    [ -f "${img:=$1}" ] || die "Failed to select a random img."
}

add_sequence() {
    seqs="$seqs]$1;$2\\";

    c=${1##*;}

    case $1 in
        *";"*)
            [ "${c}" -eq 0 ] && {
                printf '%s\n' \
                    "*background: $2" \
                    "*.background: $2" >> "$xresource_file"
            }

            [ "${c}" -eq 7 ] && {
                printf '%s\n' \
                    "*foreground: $2" \
                    "*.foreground: $2" \
                    "*cursorColor: $2" \
                    "*.cursorColor: $2" >> "$xresource_file"
            }

            [ "${c}" -lt 16 ] && {
                printf '%s\n' "color${c}=\"$2\"" >> "$colors_file"

                printf '%s\n' \
                    "*color${c}: $2" \
                    "*.color${c}: $2" >> "$xresource_file"
            }
        ;;
    esac
}

make_sequences() {
    for line in $palette; do
        color="${line:=#000000}"

        add_sequence "4;${i:=0}" "$color"

        [ "$i" = 0 ] && {
            # 11:  Background color
            # 17:  Highlight background Color
            # 257: Reversed cursor color
            # 258: Background color
            add_sequence "11" "$color"
            add_sequence "17" "$color"
            add_sequence "4;257" "$color"
            add_sequence "4;258" "$color"

            # Unless VTE
            # 708: Border color
            [ "$VTE_VERSION" ] || add_sequence "708" "$color"
        }

        [ "$i" = 15 ] && {
            # 10:  Foreground color
            # 12:  Cursor foreground color
            # 13:  Mouse foreground color
            # 19:  Highlight foreground Color
            # 256: Cursor color
            # 259: Foreground color
            add_sequence "10" "$color"
            add_sequence "12" "$color"
            add_sequence "13" "$color"
            add_sequence "19" "$color"
            add_sequence "4;256" "$color"
            add_sequence "4;259" "$color"
        }

        : $((i+=1))
    done
}

xrdb_merge() {
    exists "xrdb" && {
        [ -f "$xresource_file" ] && xrdb -merge "$xresource_file"
    }
}

print_current() {
    printf 'Using image: %s\n\n' "$img"

    for i in 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15; do
        printf '\033[48;5;%sm  \033[m  ' "$i"

        [ "$i" = 7 ] && printf '\n\n'
    done

    printf '\n\n'

    exit
}

activate_palette() {
    set +f
    set -f -- /dev/pts/[0-9]*
    for tty in "$@"; do
        [ -w "$tty" ] && printf %b "$seqs" > "$tty" &
    done

    printf %b "$seqs" > "$sequence_file"

    xrdb_merge
}

hex2rgb() {
    set -- "${1##\#}"

    r=${1%%????}
    g=${1##??}
    g=${g%%??}
    b=${1##????}

    r=$((0x$r))
    g=$((0x$g))
    b=$((0x$b))
}

mod() {
    hex2rgb "$2"

    # The operator is stored in a variable
    # which makes shellcheck freak out.
    # shellcheck disable=1102,2086
    {
        r=$((r $3 $4))
        g=$((g $3 $4))
        b=$((b $3 $4))
    }

    r=$((r > 255 ? 255 : r < 0 ? 0 : r))
    g=$((g > 255 ? 255 : g < 0 ? 0 : g))
    b=$((b > 255 ? 255 : b < 0 ? 0 : b))

    export "$1=$(printf '#%02x%02x%02x' "$r" "$g" "$b")"
}

convert_colors() {
    args="-alpha off -normalize -resize 64x64 -posterize 16"
    args="$args -modulate 125,175,100 -fill white -unique-colors"

    [ -z "$light" ] && args="$args -colorize 25%"
    [ -n "$light" ] && args="$args -colorize 15%"

    # shellcheck disable=2046,2086,2006
    set -- `\
        convert "$img" $args txt:- |

        while IFS='# ' read -r _ _ col _; do
            i=$((i+1))

            [ "$i" -lt 11 ] && continue
            [ "$i" -gt 16 ] && continue

            printf '%s\n' "#$col"
        done
    `

    # shellcheck disable=2154

    {
        mod bg "$2" "/" 8
        mod fg "$2" "+" 125
        mod co "$bg" "+" 35

        [ -n "$light" ] && {
            mod bg "$2" "*" 6
            mod fg "$2" "/" 4
            mod co "$bg" "-" 85
        }

        set -- "$bg" "$@" "$fg" "$co" "$@" "$fg"
    }

    palette=$*
}

set_wallpaper() {
    [ -f "$1" ] && {
        if exists "hsetroot"; then
            hsetroot -root -cover "$1" 1>/dev/null
        elif exists "feh"; then
            feh --bg-fill "$1"
        fi
    }
}

restore() {
    (cat "$sequence_file" 2>/dev/null &)
    exit
}

init() {
    # shellcheck disable=1090
    [ -f "$colors_file" ] && . "$colors_file"

    set_wallpaper "${wallpaper:=""}"

    xrdb_merge

    restore
}

run() {
    [ "$1" = "light" ] && light=1

    random_img "${SHW_LIB%%/}"

    :> "$xresource_file"

    printf '%s\n' "wallpaper=\"$img\"" > "$colors_file"

    convert_colors

    make_sequences

    activate_palette

    set_wallpaper "$img"

    print_current
}

main() {
    mkdir -p "${cache_dir:=$HOME/.cache/shw}"
    colors_file="$cache_dir/colors.sh"
    xresource_file="$cache_dir/colors.Xresources"
    sequence_file="$cache_dir/sequences"

    [ -n "$SHW_LIB" ] || die "SHW_LIB is not set."
    [ -d "$SHW_LIB" ] || die "$SHW_LIB is not a directory."

    case $1 in
        init) init ;;
        restore) restore ;;
        *) run "$1" ;;
    esac
}

main "$@"
