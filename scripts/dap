#!/bin/sh -f

#
# dap - dylan araps pywalesque
#
# original author: dylan araps
#

add_sequence() {
    seqs="$seqs]$1;$2\\";

    case $1 in
        *";"*)
            [ "${1##*;}" -lt 16 ] && {
                printf '%s\n' "color${1##*;}=\"$2\"" >> "$cache_dir/colors"
            }
        ;;
    esac
}

make_sequences() {
    for line in $palette; do
        color="${line:=#000000}"

        add_sequence "4;${i:=0}" "$color"

        [ "$i" = 0 ] && {
            add_sequence "11" "$color"
            add_sequence "17" "$color"
            add_sequence "4;257" "$color"
            add_sequence "4;258" "$color"
            [ "$VTE_VERSION" ] || add_sequence "708" "$color"
        }

        [ "$i" = 15 ] && {
            add_sequence "10" "$color"
            add_sequence "12" "$color"
            add_sequence "13" "$color"
            add_sequence "19" "$color"
            add_sequence "4;256" "$color"
            add_sequence "4;259" "$color"
        }

        : $((i+=1))
    done
}

print_current() {
    printf '\n'

    for i in 1 2 3 4 5 6 7; do
        printf '\033[4%sm  \033[m ' "$i"
    done

    printf '\n\n'

    exit
}

activate_palette() {
    set +f
    set -f -- /dev/pts/[0-9]*
    for tty in "$@"; do
        [ -w "$tty" ] && printf %b "$seqs" > "$tty" &
    done

    printf %b "$seqs" > "$cache_dir/sequences"
}

img() {
    [ -d "$1" ] && {
        set +f
        set -f -- "$1/"*
        shift "$(shuf -i "1-$#" -n 1)"
    }

    [ -f "${img:=$1}" ] || {
        printf 'No img.\n'
        exit 1
    }
}

hex2rgb() {
    set -- "${1##\#}"

    r=${1%%????}
    g=${1##??}
    g=${g%%??}
    b=${1##????}

    r=$((0x$r))
    g=$((0x$g))
    b=$((0x$b))
}

mod() {
    hex2rgb "$2"

    # The operator is stored in a variable
    # which makes shellcheck freak out.
    # shellcheck disable=1102,2086
    {
        r=$((r $3 $4))
        g=$((g $3 $4))
        b=$((b $3 $4))
    }

    r=$((r > 255 ? 255 : r < 0 ? 0 : r))
    g=$((g > 255 ? 255 : g < 0 ? 0 : g))
    b=$((b > 255 ? 255 : b < 0 ? 0 : b))

    export "$1=$(printf '#%02x%02x%02x' "$r" "$g" "$b")"
}

convert_colors() {
    set -- `\
        convert "$img" \
            -alpha off \
            -resize 512x512 \
            -posterize 16 \
            -fill white \
            -colorize 15% \
            -modulate 225,100,100 \
            -unique-colors \
            txt:- |

        while IFS='# ' read -r _ _ col _; do
            i=$((i+1))

            [ "$i" -lt 11 ] && continue
            [ "$i" -gt 16 ] && continue

            printf '%s\n' "#$col"
        done
    `

    # These variables are dynamically defined,
    # ignore undeclared variable warnings.
    # shellcheck disable=2154
    {
        mod bg "$2"  / 4
        mod fg "$2"  + 140
        mod co "$bg" + 90
        # hello

        set -- "$bg" "$@" "$fg" "$co" "$@" "$fg"
    }

    palette=$*
}

main() {
    mkdir -p "${cache_dir:=${XDG_CACHE_HOME:=${HOME}/.cache}/bud}"
    :> "$cache_dir/colors"

    img "$1"

    feh --bg-fill "$img"

    convert_colors
    make_sequences
    activate_palette
    print_current
}

main "$1"
